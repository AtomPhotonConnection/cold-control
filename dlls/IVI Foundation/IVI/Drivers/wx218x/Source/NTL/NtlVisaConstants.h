/******************************************************************************
 *                                                                         
 *               (C) COPYRIGHT Pacific MindWorks, Inc. 2001-2009
 *                          All rights reserved.
 *
 *****************************************************************************/

#pragma once

#include <stdarg.h>

enum VisaInterfaceType
{
	VisaInterfaceGpib,
	VisaInterfaceVxi,
	VisaInterfaceGpibVxi,
	VisaInterfaceSerial,
	VisaInterfacePxi,
	VisaInterfaceTcpip,
	VisaInterfaceUsb,
	VisaInterfaceFirewire,
	VisaInterfaceOther
};

enum VisaIoProtocol
{
    VisaProtocolNormal,
    VisaProtocolFdc,
    VisaProtocolHs488,
    VisaProtocol4882Strs,
    VisaProtocolUsbTmcVendor
};

enum VisaBufferMask
{
	VisaReadBuffer,
	VisaWriteBuffer,
	VisaReadAndWriteBuffers
};

enum VisaEventType
{
    VisaEventIoCompletion,
    VisaEventTrig,
    VisaEventServiceReq,
    VisaEventClear,
    VisaEventException,
	VisaEventGpibCic,
	VisaEventGpibTalk,
	VisaEventGpibListen,
	VisaEventVxiVmeSysfail,
	VisaEventVxiVmeSysreset,
	VisaEventVxiSigP,
	VisaEventVxiVmeIntr,
	VisaEventTcpipConnect,
	VisaEventUsbIntr,
	VisaEventAllEvents,
	VisaEventCustom
};

enum VisaEventMechanism
{
    VisaEventMechanismQuery,
	VisaEventMechanismHndlr,
	VisaEventMechanismSuspendHndlr,
	VisaEventMechanismAll
};

enum VisaTriggerLine
{
    VisaTriggerSw,
    VisaTriggerTtl0,
    VisaTriggerTtl1,
    VisaTriggerTtl2,
    VisaTriggerTtl3,
    VisaTriggerTtl4,
    VisaTriggerTtl5,
    VisaTriggerTtl6,
    VisaTriggerTtl7,
    VisaTriggerEcl0,
    VisaTriggerEcl1,
    VisaTriggerPanelInput,
    VisaTriggerPanelOutput,
    VisaTriggerAll
};

    
enum VisaTriggerProtocol
{
	VisaTriggerProtocolDefault,
	VisaTriggerProtocolOn,
	VisaTriggerProtocolOff,
	VisaTriggerProtocolSync,
};

enum VisaAddressSpace
{
	VisaA16Space,
	VisaA24Space,
	VisaA32Space,
	VisaA64Space,
	VisaPxiCfgSpace,
	VisaPxiBar0Space,
	VisaPxiBar1Space,
	VisaPxiBar2Space,
	VisaPxiBar3Space,
	VisaPxiBar4Space,
	VisaPxiBar5Space,
	VisaPxiAllocSpace
};

enum VisaDataWidth
{
	VisaDataWidth8,
	VisaDataWidth16,
	VisaDataWidth32,
	VisaDataWidth64
};

enum VisaAccessMode
{
	VisaAccessNoLock,
	VisaAccessExclusiveLock,
	VisaAccessSharedLock,
	VisaAccessLoadConfig
};

enum NtlVisaStatusCode
{
	NTL_S_VISA_SUCCESS = 0,
	NTL_S_VISA_EVENT_EN = 262146,
	NTL_S_VISA_EVENT_DIS = 262147,
	NTL_S_VISA_QUEUE_EMPTY = 262148,
	NTL_S_VISA_TERM_CHAR = 262149,
	NTL_S_VISA_MAX_CNT = 262150,
	NTL_S_VISA_DEV_NPRESENT = 262269,
	NTL_S_VISA_QUEUE_NEMPTY = 262272,
	NTL_S_VISA_TRIG_MAPPED = 262270,
	NTL_S_VISA_NCHAIN = 262296,
	NTL_S_VISA_NESTED_SHARED = 262297,
	NTL_S_VISA_NESTED_EXCLUSIVE = 262298,
	NTL_S_VISA_SYNC = 262299,
	NTL_S_VISA_QUEUE_OVERFLOW = 262156,
	NTL_S_VISA_CONFIG_NLOADED = 262263,
	NTL_S_VISA_NULL_OBJECT = 262274,
	NTL_S_VISA_NSUP_ATTR_STATE = 262276,
	NTL_S_VISA_UNKNOWN_STATUS = 262277,
	NTL_S_VISA_NSUP_BUF = 262280,
	NTL_S_VISA_EXT_FUNC_NIMPL = 262313,
	NTL_E_VISA_SYSTEM_ERROR = -2147221504,
	NTL_E_VISA_INV_OBJECT = -2147221490,
	NTL_E_VISA_RSRC_LOCKED = -2147221489,
	NTL_E_VISA_INV_EXPR = -2147221488,
	NTL_E_VISA_RSRC_NFOUND = -2147221487,
	NTL_E_VISA_INV_RSRC_NAME = -2147221486,
	NTL_E_VISA_INV_ACC_MODE = -2147221485,
	NTL_E_VISA_TMO = -2147221483,
	NTL_E_VISA_CLOSING_FAILED = -2147221482,
	NTL_E_VISA_INV_DEGREE = -2147221477,
	NTL_E_VISA_INV_JOB_ID = -2147221476,
	NTL_E_VISA_NSUP_ATTR = -2147221475,
	NTL_E_VISA_NSUP_ATTR_STATE = -2147221474,
	NTL_E_VISA_ATTR_READONLY = -2147221473,
	NTL_E_VISA_INV_LOCK_TYPE = -2147221472,
	NTL_E_VISA_INV_ACCESS_KEY = -2147221471,
	NTL_E_VISA_INV_EVENT = -2147221466,
	NTL_E_VISA_INV_MECH = -2147221465,
	NTL_E_VISA_HNDLR_NINSTALLED = -2147221464,
	NTL_E_VISA_INV_HNDLR_REF = -2147221463,
	NTL_E_VISA_INV_CONTEXT = -2147221462,
	NTL_E_VISA_QUEUE_OVERFLOW = -2147221459,
	NTL_E_VISA_NENABLED = -2147221457,
	NTL_E_VISA_ABORT = -2147221456,
	NTL_E_VISA_RAW_WR_PROT_VIOL = -2147221452,
	NTL_E_VISA_RAW_RD_PROT_VIOL = -2147221451,
	NTL_E_VISA_OUTP_PROT_VIOL = -2147221450,
	NTL_E_VISA_INP_PROT_VIOL = -2147221449,
	NTL_E_VISA_BERR = -2147221448,
	NTL_E_VISA_IN_PROGRESS = -2147221447,
	NTL_E_VISA_INV_SETUP = -2147221446,
	NTL_E_VISA_QUEUE_ERROR = -2147221445,
	NTL_E_VISA_ALLOC = -2147221444,
	NTL_E_VISA_INV_MASK = -2147221443,
	NTL_E_VISA_IO = -2147221442,
	NTL_E_VISA_INV_FMT = -2147221441,
	NTL_E_VISA_NSUP_FMT = -2147221439,
	NTL_E_VISA_LINE_IN_USE = -2147221438,
	NTL_E_VISA_NSUP_MODE = -2147221434,
	NTL_E_VISA_SRQ_NOCCURRED = -2147221430,
	NTL_E_VISA_INV_SPACE = -2147221426,
	NTL_E_VISA_INV_OFFSET = -2147221423,
	NTL_E_VISA_INV_WIDTH = -2147221422,
	NTL_E_VISA_NSUP_OFFSET = -2147221420,
	NTL_E_VISA_NSUP_VAR_WIDTH = -2147221419,
	NTL_E_VISA_WINDOW_NMAPPED = -2147221417,
	NTL_E_VISA_RESP_PENDING = -2147221415,
	NTL_E_VISA_NLISTENERS = -2147221409,
	NTL_E_VISA_NCIC = -2147221408,
	NTL_E_VISA_NSYS_CNTLR = -2147221407,
	NTL_E_VISA_NSUP_OPER = -2147221401,
	NTL_E_VISA_INTR_PENDING = -2147221400,
	NTL_E_VISA_ASRL_PARITY = -2147221398,
	NTL_E_VISA_ASRL_FRAMING = -2147221397,
	NTL_E_VISA_ASRL_OVERRUN = -2147221396,
	NTL_E_VISA_TRIG_NMAPPED = -2147221394,
	NTL_E_VISA_NSUP_ALIGN_OFFSET = -2147221392,
	NTL_E_VISA_USER_BUF = -2147221391,
	NTL_E_VISA_RSRC_BUSY = -2147221390,
	NTL_E_VISA_NSUP_WIDTH = -2147221386,
	NTL_E_VISA_INV_PARAMETER = -2147221384,
	NTL_E_VISA_INV_PROT = -2147221383,
	NTL_E_VISA_INV_SIZE = -2147221381,
	NTL_E_VISA_WINDOW_MAPPED = -2147221376,
	NTL_E_VISA_NIMPL_OPER = -2147221375,
	NTL_E_VISA_INV_LENGTH = -2147221373,
	NTL_E_VISA_INV_MODE = -2147221359,
	NTL_E_VISA_SESN_NLOCKED = -2147221348,
	NTL_E_VISA_MEM_NSHARED = -2147221347,
	NTL_E_VISA_LIBRARY_NFOUND = -2147221346,
	NTL_E_VISA_NSUP_INTR = -2147221345,
	NTL_E_VISA_INV_LINE = -2147221344,
	NTL_E_VISA_FILE_ACCESS = -2147221343,
	NTL_E_VISA_FILE_IO = -2147221342,
	NTL_E_VISA_NSUP_LINE = -2147221341,
	NTL_E_VISA_NSUP_MECH = -2147221340,
	NTL_E_VISA_INTF_NUM_NCONFIG = -2147221339,
	NTL_E_VISA_CONN_LOST = -2147221338
};

// VISA attribute definitions
#ifndef VI_ATTR_RSRC_CLASS

#define VI_ATTR_RSRC_CLASS          (0xBFFF0001UL)
#define VI_ATTR_RSRC_NAME           (0xBFFF0002UL)
#define VI_ATTR_RSRC_IMPL_VERSION   (0x3FFF0003UL)
#define VI_ATTR_RSRC_LOCK_STATE     (0x3FFF0004UL)
#define VI_ATTR_MAX_QUEUE_LENGTH    (0x3FFF0005UL)
#define VI_ATTR_USER_DATA_32        (0x3FFF0007UL) 
#define VI_ATTR_FDC_CHNL            (0x3FFF000DUL)
#define VI_ATTR_FDC_MODE            (0x3FFF000FUL)
#define VI_ATTR_FDC_GEN_SIGNAL_EN   (0x3FFF0011UL)
#define VI_ATTR_FDC_USE_PAIR        (0x3FFF0013UL)
#define VI_ATTR_SEND_END_EN         (0x3FFF0016UL)
#define VI_ATTR_TERMCHAR            (0x3FFF0018UL)
#define VI_ATTR_TMO_VALUE           (0x3FFF001AUL)
#define VI_ATTR_GPIB_READDR_EN      (0x3FFF001BUL)
#define VI_ATTR_IO_PROT             (0x3FFF001CUL)
#define VI_ATTR_DMA_ALLOW_EN        (0x3FFF001EUL)
#define VI_ATTR_ASRL_BAUD           (0x3FFF0021UL)
#define VI_ATTR_ASRL_DATA_BITS      (0x3FFF0022UL)
#define VI_ATTR_ASRL_PARITY         (0x3FFF0023UL)
#define VI_ATTR_ASRL_STOP_BITS      (0x3FFF0024UL)
#define VI_ATTR_ASRL_FLOW_CNTRL     (0x3FFF0025UL)
#define VI_ATTR_RD_BUF_OPER_MODE    (0x3FFF002AUL)
#define VI_ATTR_RD_BUF_SIZE         (0x3FFF002BUL)
#define VI_ATTR_WR_BUF_OPER_MODE    (0x3FFF002DUL)
#define VI_ATTR_WR_BUF_SIZE         (0x3FFF002EUL)
#define VI_ATTR_SUPPRESS_END_EN     (0x3FFF0036UL)
#define VI_ATTR_TERMCHAR_EN         (0x3FFF0038UL)
#define VI_ATTR_DEST_ACCESS_PRIV    (0x3FFF0039UL)
#define VI_ATTR_DEST_BYTE_ORDER     (0x3FFF003AUL)
#define VI_ATTR_SRC_ACCESS_PRIV     (0x3FFF003CUL)
#define VI_ATTR_SRC_BYTE_ORDER      (0x3FFF003DUL)
#define VI_ATTR_SRC_INCREMENT       (0x3FFF0040UL)
#define VI_ATTR_DEST_INCREMENT      (0x3FFF0041UL)
#define VI_ATTR_WIN_ACCESS_PRIV     (0x3FFF0045UL)
#define VI_ATTR_WIN_BYTE_ORDER      (0x3FFF0047UL)
#define VI_ATTR_GPIB_ATN_STATE      (0x3FFF0057UL)
#define VI_ATTR_GPIB_ADDR_STATE     (0x3FFF005CUL)
#define VI_ATTR_GPIB_CIC_STATE      (0x3FFF005EUL)
#define VI_ATTR_GPIB_NDAC_STATE     (0x3FFF0062UL)
#define VI_ATTR_GPIB_SRQ_STATE      (0x3FFF0067UL)
#define VI_ATTR_GPIB_SYS_CNTRL_STATE (0x3FFF0068UL)
#define VI_ATTR_GPIB_HS488_CBL_LEN  (0x3FFF0069UL)
#define VI_ATTR_CMDR_LA             (0x3FFF006BUL)
#define VI_ATTR_VXI_DEV_CLASS       (0x3FFF006CUL)
#define VI_ATTR_MAINFRAME_LA        (0x3FFF0070UL)
#define VI_ATTR_MANF_NAME           (0xBFFF0072UL)
#define VI_ATTR_MODEL_NAME          (0xBFFF0077UL)
#define VI_ATTR_VXI_VME_INTR_STATUS (0x3FFF008BUL)
#define VI_ATTR_VXI_TRIG_STATUS     (0x3FFF008DUL)
#define VI_ATTR_VXI_VME_SYSFAIL_STATE (0x3FFF0094UL)
#define VI_ATTR_WIN_BASE_ADDR_32    (0x3FFF0098UL)
#define VI_ATTR_WIN_SIZE_32         (0x3FFF009AUL) 
#define VI_ATTR_ASRL_AVAIL_NUM      (0x3FFF00ACUL)
#define VI_ATTR_MEM_BASE_32         (0x3FFF00ADUL) 
#define VI_ATTR_ASRL_CTS_STATE      (0x3FFF00AEUL)
#define VI_ATTR_ASRL_DCD_STATE      (0x3FFF00AFUL)
#define VI_ATTR_ASRL_DSR_STATE      (0x3FFF00B1UL)
#define VI_ATTR_ASRL_DTR_STATE      (0x3FFF00B2UL)
#define VI_ATTR_ASRL_END_IN         (0x3FFF00B3UL)
#define VI_ATTR_ASRL_END_OUT        (0x3FFF00B4UL)
#define VI_ATTR_ASRL_REPLACE_CHAR   (0x3FFF00BEUL)
#define VI_ATTR_ASRL_RI_STATE       (0x3FFF00BFUL)
#define VI_ATTR_ASRL_RTS_STATE      (0x3FFF00C0UL)
#define VI_ATTR_ASRL_XON_CHAR       (0x3FFF00C1UL)
#define VI_ATTR_ASRL_XOFF_CHAR      (0x3FFF00C2UL)
#define VI_ATTR_WIN_ACCESS          (0x3FFF00C3UL)
#define VI_ATTR_RM_SESSION          (0x3FFF00C4UL)
#define VI_ATTR_VXI_LA              (0x3FFF00D5UL)
#define VI_ATTR_MANF_ID             (0x3FFF00D9UL)
#define VI_ATTR_MEM_SIZE_32         (0x3FFF00DDUL) 
#define VI_ATTR_MEM_SPACE           (0x3FFF00DEUL)
#define VI_ATTR_MODEL_CODE          (0x3FFF00DFUL)
#define VI_ATTR_SLOT                (0x3FFF00E8UL)
#define VI_ATTR_INTF_INST_NAME      (0xBFFF00E9UL)
#define VI_ATTR_IMMEDIATE_SERV      (0x3FFF0100UL)
#define VI_ATTR_INTF_PARENT_NUM     (0x3FFF0101UL)
#define VI_ATTR_RSRC_SPEC_VERSION   (0x3FFF0170UL)
#define VI_ATTR_INTF_TYPE           (0x3FFF0171UL)
#define VI_ATTR_GPIB_PRIMARY_ADDR   (0x3FFF0172UL)
#define VI_ATTR_GPIB_SECONDARY_ADDR (0x3FFF0173UL)
#define VI_ATTR_RSRC_MANF_NAME      (0xBFFF0174UL)
#define VI_ATTR_RSRC_MANF_ID        (0x3FFF0175UL)
#define VI_ATTR_INTF_NUM            (0x3FFF0176UL)
#define VI_ATTR_TRIG_ID             (0x3FFF0177UL)
#define VI_ATTR_GPIB_REN_STATE      (0x3FFF0181UL)
#define VI_ATTR_GPIB_UNADDR_EN      (0x3FFF0184UL)
#define VI_ATTR_DEV_STATUS_BYTE     (0x3FFF0189UL)
#define VI_ATTR_FILE_APPEND_EN      (0x3FFF0192UL)
#define VI_ATTR_VXI_TRIG_SUPPORT    (0x3FFF0194UL)
#define VI_ATTR_TCPIP_ADDR          (0xBFFF0195UL)
#define VI_ATTR_TCPIP_HOSTNAME      (0xBFFF0196UL)
#define VI_ATTR_TCPIP_PORT          (0x3FFF0197UL)
#define VI_ATTR_TCPIP_DEVICE_NAME   (0xBFFF0199UL)
#define VI_ATTR_TCPIP_NODELAY       (0x3FFF019AUL)
#define VI_ATTR_TCPIP_KEEPALIVE     (0x3FFF019BUL)
#define VI_ATTR_4882_COMPLIANT      (0x3FFF019FUL)
#define VI_ATTR_USB_SERIAL_NUM      (0xBFFF01A0UL)
#define VI_ATTR_USB_INTFC_NUM       (0x3FFF01A1UL)
#define VI_ATTR_USB_PROTOCOL        (0x3FFF01A7UL)
#define VI_ATTR_USB_MAX_INTR_SIZE   (0x3FFF01AFUL)
#define VI_ATTR_PXI_DEV_NUM         (0x3FFF0201UL)
#define VI_ATTR_PXI_FUNC_NUM        (0x3FFF0202UL)
#define VI_ATTR_PXI_BUS_NUM         (0x3FFF0205UL)
#define VI_ATTR_PXI_CHASSIS         (0x3FFF0206UL)
#define VI_ATTR_PXI_SLOTPATH        (0xBFFF0207UL)
#define VI_ATTR_PXI_SLOT_LBUS_LEFT  (0x3FFF0208UL)
#define VI_ATTR_PXI_SLOT_LBUS_RIGHT (0x3FFF0209UL)
#define VI_ATTR_PXI_TRIG_BUS        (0x3FFF020AUL)
#define VI_ATTR_PXI_STAR_TRIG_BUS   (0x3FFF020BUL)
#define VI_ATTR_PXI_STAR_TRIG_LINE  (0x3FFF020CUL)
#define VI_ATTR_PXI_MEM_TYPE_BAR0   (0x3FFF0211UL)
#define VI_ATTR_PXI_MEM_TYPE_BAR1   (0x3FFF0212UL)
#define VI_ATTR_PXI_MEM_TYPE_BAR2   (0x3FFF0213UL)
#define VI_ATTR_PXI_MEM_TYPE_BAR3   (0x3FFF0214UL)
#define VI_ATTR_PXI_MEM_TYPE_BAR4   (0x3FFF0215UL)
#define VI_ATTR_PXI_MEM_TYPE_BAR5   (0x3FFF0216UL)
#define VI_ATTR_PXI_MEM_BASE_BAR0   (0x3FFF0221UL)
#define VI_ATTR_PXI_MEM_BASE_BAR1   (0x3FFF0222UL)
#define VI_ATTR_PXI_MEM_BASE_BAR2   (0x3FFF0223UL)
#define VI_ATTR_PXI_MEM_BASE_BAR3   (0x3FFF0224UL)
#define VI_ATTR_PXI_MEM_BASE_BAR4   (0x3FFF0225UL)
#define VI_ATTR_PXI_MEM_BASE_BAR5   (0x3FFF0226UL)
#define VI_ATTR_PXI_MEM_SIZE_BAR0   (0x3FFF0231UL)
#define VI_ATTR_PXI_MEM_SIZE_BAR1   (0x3FFF0232UL)
#define VI_ATTR_PXI_MEM_SIZE_BAR2   (0x3FFF0233UL)
#define VI_ATTR_PXI_MEM_SIZE_BAR3   (0x3FFF0234UL)
#define VI_ATTR_PXI_MEM_SIZE_BAR4   (0x3FFF0235UL)
#define VI_ATTR_PXI_MEM_SIZE_BAR5   (0x3FFF0236UL)
#define VI_ATTR_PXI_IS_EXPRESS      (0x3FFF0240UL)
#define VI_ATTR_PXI_SLOT_LWIDTH     (0x3FFF0241UL)
#define VI_ATTR_PXI_MAX_LWIDTH      (0x3FFF0242UL)
#define VI_ATTR_PXI_ACTUAL_LWIDTH   (0x3FFF0243UL)
#define VI_ATTR_PXI_DSTAR_BUS       (0x3FFF0244UL)
#define VI_ATTR_PXI_DSTAR_SET       (0x3FFF0245UL)

#define VI_ATTR_JOB_ID              (0x3FFF4006UL)
#define VI_ATTR_EVENT_TYPE          (0x3FFF4010UL)
#define VI_ATTR_SIGP_STATUS_ID      (0x3FFF4011UL)
#define VI_ATTR_RECV_TRIG_ID        (0x3FFF4012UL)
#define VI_ATTR_INTR_STATUS_ID      (0x3FFF4023UL)
#define VI_ATTR_STATUS              (0x3FFF4025UL)
#define VI_ATTR_RET_COUNT_32        (0x3FFF4026UL) 
#define VI_ATTR_BUFFER              (0x3FFF4027UL)
#define VI_ATTR_RECV_INTR_LEVEL     (0x3FFF4041UL)
#define VI_ATTR_OPER_NAME           (0xBFFF4042UL)
#define VI_ATTR_GPIB_RECV_CIC_STATE (0x3FFF4193UL)
#define VI_ATTR_RECV_TCPIP_ADDR     (0xBFFF4198UL)
#define VI_ATTR_USB_RECV_INTR_SIZE  (0x3FFF41B0UL)
#define VI_ATTR_USB_RECV_INTR_DATA  (0xBFFF41B1UL)

/*- Attributes (platform dependent size) ------------------------------------*/

#if defined(_VI_INT64_UINT64_DEFINED) && defined(_VISA_ENV_IS_64_BIT)
#define VI_ATTR_USER_DATA_64        (0x3FFF000AUL)
#define VI_ATTR_RET_COUNT_64        (0x3FFF4028UL)
#define VI_ATTR_USER_DATA           (VI_ATTR_USER_DATA_64)
#define VI_ATTR_RET_COUNT           (VI_ATTR_RET_COUNT_64)
#else
#define VI_ATTR_USER_DATA           (VI_ATTR_USER_DATA_32)
#define VI_ATTR_RET_COUNT           (VI_ATTR_RET_COUNT_32)
#endif
#if defined(_VI_INT64_UINT64_DEFINED)
#define VI_ATTR_WIN_BASE_ADDR_64    (0x3FFF009BUL)
#define VI_ATTR_WIN_SIZE_64         (0x3FFF009CUL)
#define VI_ATTR_MEM_BASE_64         (0x3FFF00D0UL)
#define VI_ATTR_MEM_SIZE_64         (0x3FFF00D1UL)
#endif
#if defined(_VI_INT64_UINT64_DEFINED) && defined(_VISA_ENV_IS_64_BIT)
#define VI_ATTR_WIN_BASE_ADDR       (VI_ATTR_WIN_BASE_ADDR_64)
#define VI_ATTR_WIN_SIZE            (VI_ATTR_WIN_SIZE_64)
#define VI_ATTR_MEM_BASE            (VI_ATTR_MEM_BASE_64)
#define VI_ATTR_MEM_SIZE            (VI_ATTR_MEM_SIZE_64)
#else
#define VI_ATTR_WIN_BASE_ADDR       (VI_ATTR_WIN_BASE_ADDR_32)
#define VI_ATTR_WIN_SIZE            (VI_ATTR_WIN_SIZE_32)
#define VI_ATTR_MEM_BASE            (VI_ATTR_MEM_BASE_32)
#define VI_ATTR_MEM_SIZE            (VI_ATTR_MEM_SIZE_32)
#endif 

// Other VISA definitions
#define VI_INTF_GPIB                (1)
#define VI_INTF_VXI                 (2)
#define VI_INTF_GPIB_VXI            (3)
#define VI_INTF_ASRL                (4)
#define VI_INTF_PXI                 (5)
#define VI_INTF_TCPIP               (6)
#define VI_INTF_USB                 (7)

#define VI_LOCAL_SPACE              (0)
#define VI_A16_SPACE                (1)
#define VI_A24_SPACE                (2)
#define VI_A32_SPACE                (3)
#define VI_A64_SPACE                (4)
#define VI_PXI_ALLOC_SPACE          (9)
#define VI_PXI_CFG_SPACE            (10)
#define VI_PXI_BAR0_SPACE           (11)
#define VI_PXI_BAR1_SPACE           (12)
#define VI_PXI_BAR2_SPACE           (13)
#define VI_PXI_BAR3_SPACE           (14)
#define VI_PXI_BAR4_SPACE           (15)
#define VI_PXI_BAR5_SPACE           (16)
#define VI_OPAQUE_SPACE             (0xFFFF)

#endif	// VI_ATTR_RSRC_CLASS